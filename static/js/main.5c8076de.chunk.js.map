{"version":3,"sources":["components/Header.js","components/Controls.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","width","height","viewBox","id","stroke","strokeWidth","fill","fillRule","transform","d","Controls","setpbdata","useState","hours","setHours","mins","setMins","secs","setSecs","deciTime","setDeciTime","speed","setSpeed","useEffect","focusHandle","e","target","value","name","type","min","onChange","parseInt","onFocus","placeholder","htmlFor","max","step","dots","marks","0.25","0.5","0.75","1","1.25","1.5","1.75","2","Result","pbdata","newTime","setNewTime","Math","floor","minutes","seconds","dangerouslySetInnerHTML","__html","App","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5c8076de.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header() {\n    return (\n      <div className=\"header\">\n        <svg width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\">\n            <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <g id=\"Artboard-2-Copy\" transform=\"translate(-304.000000, -118.000000)\" fill=\"#FFFFFF\" fillRule=\"nonzero\">\n                    <g id=\"iconmonstr-time-19\" transform=\"translate(304.000000, 118.000000)\">\n                        <path d=\"M42.4266667,35.5733333 L49.456,24.8373333 L48.2453333,23.7546667 L38.4506667,32.0186667 C36.6506667,31.6506667 34.712,32.2 33.4,33.6666667 C31.4373333,35.8613333 31.6266667,39.2346667 33.824,41.1973333 C36.0213333,43.16 39.392,42.9706667 41.3546667,40.7733333 C42.6666667,39.3066667 42.9946667,37.32 42.4266667,35.5733333 Z M32,7.184 L32,-8.8817842e-16 L42.6666667,-8.8817842e-16 L42.6666667,7.184 C38.8293333,6.536 35.7546667,6.54933333 32,7.184 Z M55.6026667,12.688 L59.3546667,8.936 L63.1253333,12.7066667 L59.6026667,16.2293333 C58.3706667,14.9386667 57.032,13.7573333 55.6026667,12.688 Z M5.33333333,24 L26.6666667,24 L26.6666667,29.3333333 L5.33333333,29.3333333 L5.33333333,24 Z M0,34.6666667 L21.3333333,34.6666667 L21.3333333,40 L0,40 L0,34.6666667 Z M8,45.3333333 L26.6666667,45.3333333 L26.6666667,50.6666667 L8,50.6666667 L8,45.3333333 Z M64,37.3333333 C64,52.0613333 52.0613333,64 37.3333333,64 C29.8933333,64 23.2,60.92 18.3706667,56 L27.1173333,56 C30.152,57.6826667 33.6213333,58.6666667 37.3333333,58.6666667 C49.096,58.6666667 58.6666667,49.096 58.6666667,37.3333333 C58.6666667,25.5706667 49.096,16 37.3333333,16 C33.6213333,16 30.152,16.984 27.1173333,18.6666667 L18.3706667,18.6666667 C23.2,13.7466667 29.8933333,10.6666667 37.3333333,10.6666667 C52.0613333,10.6666667 64,22.6053333 64,37.3333333 Z\" id=\"Shape\"></path>\n                    </g>\n                </g>\n            </g>\n        </svg>\n        <div>\n        <h1> Playback speed calculator</h1>\n        <h2> A nifty app to calculate the playback speed of your media. </h2>\n        </div>\n      </div>\n    )\n}\n\nexport default Header\n","import React, { useState, useEffect } from \"react\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\n\nfunction Controls({ setpbdata }) {\n\n  const [hours, setHours] = useState(0);\n  const [mins, setMins] = useState(0);\n  const [secs, setSecs] = useState(0);\n  const [deciTime, setDeciTime] = useState();\n  const [speed, setSpeed] = useState(\"1\");\n\n  useEffect(() => {\n    setDeciTime(hours * 3600 + mins * 60 + secs);\n  }, [hours, mins, secs]);\n\n  useEffect(() => {\n    setpbdata((deciTime / speed) || 0);\n  }, [deciTime, speed]);\n\n  const focusHandle = (e) => {\n    if (e.target.value === \"0\") {\n      e.target.value = \"\";\n    }\n  };\n  const hourHandle = (e) => {\n    e.target.value <= 999\n      ? setHours(parseInt(e.target.value || 0))\n      : setHours(0);\n  };\n  const minHandle = (e) => {\n    e.target.value <= 59 \n      ? setMins(parseInt(e.target.value || 0 )) \n      : setMins(59);\n  };\n  const secHandle = (e) => {\n    e.target.value <= 59 \n      ? setSecs(parseInt(e.target.value || 0)) \n      : setSecs(59);\n  };\n  const speedHandle = (value) => {\n    setSpeed(value);\n  };\n\n  const marks = {\n    0.25: \"0.25\",\n    0.5: \"0.50\",\n    0.75: \"0.75\",\n    1: \"1\",\n    1.25: \"1.25\",\n    1.5: \"1.50\",\n    1.75: \"1.75\",\n    2: \"2\",\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"media_runtime\">\n        <h3> Enter Media Runtime</h3>\n        <form id=\"duration\">\n          <div>\n            <input\n              id=\"h\"\n              name=\"h\"\n              type=\"number\"\n              min=\"0\"\n              onChange={hourHandle}\n              onFocus={focusHandle}\n              value={hours}\n              placeholder=\"0\"\n            />\n            <label htmlFor=\"h\">Hrs</label>\n          </div>\n          <div>\n            <input\n              id=\"m\"\n              name=\"m\"\n              type=\"number\"\n              min=\"0\"\n              max=\"59\"\n              onChange={minHandle}\n              onFocus={focusHandle}\n              value={mins}\n              placeholder=\"0\"\n            />\n            <label htmlFor=\"m\">Mins</label>\n          </div>\n          <div>\n            <input\n              id=\"s\"\n              name=\"s\"\n              type=\"number\"\n              min=\"0\"\n              max=\"59\"\n              onChange={secHandle}\n              onFocus={focusHandle}\n              value={secs}\n              placeholder=\"0\"\n            />\n            <label htmlFor=\"s\">Secs</label>\n          </div>\n        </form>\n      </div>\n      <div className=\"playback_speed\">\n        <h3> Set Playback Speed</h3>\n        <div className=\"pb_slider\">\n          <Slider\n            min={0.25}\n            max={2}\n            step={0.25}\n            dots={true}\n            marks={marks}\n            value={speed}\n            onChange={speedHandle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Controls;\n","import React, { useState, useEffect } from \"react\";\n\nfunction Result({ pbdata }) {\n  const [newTime, setNewTime] = useState(\"\");\n  useEffect(() => {\n    //if (isNaN(pbdata)) return;\n    let hours = Math.floor(pbdata / 60 / 60);\n    let minutes = Math.floor(pbdata / 60) - hours * 60;\n    let seconds = Math.floor(pbdata % 60);\n    setNewTime(\n      `${hours} <span>Hours</span> ${minutes}<span> Mins</span> ${seconds} <span>Secs</span>`\n    );\n  }, [pbdata]);\n  return (\n    <div className=\"result\">\n      <h3>Updated Runtime</h3>\n      <div\n        className=\"result-box animate__animated animate__fadeIn\"\n        dangerouslySetInnerHTML={{ __html: newTime }}\n      ></div>\n    </div>\n  );\n}\n\nexport default Result;\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Controls from \"./components/Controls\";\nimport Result from \"./components/Result\";\nimport \"./App.scss\";\nimport \"animate.css\"\nfunction App() {\n  const [pbdata, setpbdata] = useState(0);\n  return (\n    <div className=\"App\">\n      <div className=\"calculator animate__animated animate__fadeIn\">\n        <Header />\n        <Controls setpbdata={setpbdata} />\n        <Result pbdata={pbdata} />\n      </div>\n      <div className=\"footer\">\n        <p> A ReactJS based project by Jinson Abraham</p>\n        <p> Find this on <a href=\"https://github.com/web2feel/playback_speed_calculator\">Github</a>  </p> \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}